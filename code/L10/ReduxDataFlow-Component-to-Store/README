++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
						ACTIONS - DEMO
						++++++++++++++

STEP 1: Create new directory "Actions" and create "index.js" file

STEP 2: Create a 'Action Creator'function to return a 'action'
=======

//Action Creator Function
export const selectMovie = (movie) => {

	console.log("You click on Movie: "+ movie);
	
};

STEP 3: Continuation of Code
======
export const selectMovie = (movie) => {
	console.log("You click on Movie: "+ movie);
	
	return {
				type: "MOVIE_SELECTED",
				payload: movie
			}
};

STEP 4: Goto 'Container Component' which is 'movie-poster.js'
======= and Import the 'Action Creator' and bind it to container component, so that we can have the data

import {selectMovie} from '../actions/index';



STEP 5: Create 'MatchDispatchToProps' method and Edit the 'Connect' line @ the bottom
=======

function matchDispatchToProps(dispatch){
	return bindActionCreators({selectMovie: selectMovie}, dispatch);

}

export default connect(mapStateToProps,matchDispatchToProps)(MoviePoster);


STEP 6:   Move the 'MovieList' map code as a separate method and pass the "this.props.selectMovie"
=======   method as props to 'MovieBox' component

createMovieList(){

		return this.props.movies.map(function(movie){
			return
				<MovieBox ItemKey={movie.key} desc={movie.desc} title={movie.title} pic={movie.pic} handleBooking={this.props.selectMovie}/>				
		}.bind(this));
	}


STEP 7: Goto 'MovieBox' component and call the 'this.props.selectMovie' method 
======
onClick={()=> this.props.handleBooking(movieChoosen)}


STEP 8:  FINAL CODE - The Reducer listen to the 'ACtion' announcement and changes the STORE 
=======